# Generated by Django 3.0.3 on 2020-02-21 17:05

import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='The three-letter outcome code.', max_length=3)),
                ('description', models.CharField(help_text='The outcome description.', max_length=100)),
                ('colour', colorfield.fields.ColorField(default='#444466', help_text='Display colour for this outcome.', max_length=18)),
            ],
        ),
        migrations.CreateModel(
            name='Proposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='The three-letter proposition code.', max_length=3)),
                ('description', models.CharField(help_text='The definitive proposition statement.', max_length=100)),
                ('resolve_date', models.DateField(help_text='The date on which this proposition will resolve.')),
                ('active', models.BooleanField(default=True, help_text='Whether this proposition is enabled and unresolved.')),
                ('outcome', models.ForeignKey(blank=True, default=None, help_text='The result of this proposition.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outcome', to='markets.Outcome')),
            ],
            options={
                'ordering': ['-active', 'resolve_date', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Tokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affirm', models.BooleanField(help_text='Whether the stake is for the affirmative.')),
                ('quantity', models.IntegerField(help_text='The amount of stake owned ($).')),
                ('outcome', models.ForeignKey(help_text='The outcome for which the stake is held.', on_delete=django.db.models.deletion.CASCADE, to='markets.Outcome')),
                ('proposition', models.ForeignKey(help_text='The propostion in which the stake is held.', on_delete=django.db.models.deletion.CASCADE, to='markets.Proposition')),
                ('user', models.ForeignKey(help_text='The owner of the stake.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'tokens',
                'ordering': ['user', 'proposition'],
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(help_text='The price which was offered for this outcome.')),
                ('quantity', models.IntegerField(help_text='The number of tokens which were traded.')),
                ('time', models.DateTimeField(auto_now=True)),
                ('outcome', models.ForeignKey(help_text='The outcome with which this price is associated.', on_delete=django.db.models.deletion.CASCADE, to='markets.Outcome')),
                ('proposition', models.ForeignKey(help_text='The proposition which was traded.', on_delete=django.db.models.deletion.CASCADE, to='markets.Proposition')),
            ],
            options={
                'ordering': ['proposition', 'outcome', '-time'],
            },
            managers=[
                ('prices', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='outcome',
            name='proposition',
            field=models.ForeignKey(help_text='The proposition to which this outcome belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='proposition', to='markets.Proposition'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affirm', models.BooleanField(help_text='Whether the order is for the affirmative.')),
                ('price', models.IntegerField(help_text='The price the user is willing to pay per token (c).')),
                ('quantity', models.IntegerField(help_text='The number of tokens the user wants to purchase.')),
                ('time', models.DateTimeField(auto_now=True)),
                ('outcome', models.ForeignKey(help_text='The outcome being bet on.', on_delete=django.db.models.deletion.CASCADE, to='markets.Outcome')),
                ('proposition', models.ForeignKey(help_text='The proposition on which the order is placed.', on_delete=django.db.models.deletion.CASCADE, to='markets.Proposition')),
                ('user', models.ForeignKey(help_text='The user who placed the order.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['proposition', 'outcome', '-price', 'time'],
            },
        ),
        migrations.CreateModel(
            name='Funds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, help_text='Available funds ($AUD).', max_digits=12)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'funds',
                'ordering': ['user'],
            },
            managers=[
                ('users', django.db.models.manager.Manager()),
            ],
        ),
    ]
